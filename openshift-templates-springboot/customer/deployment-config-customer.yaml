apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    sidecar.jaegertracing.io/inject: "true"
  labels:
    app: customer
    app.kubernetes.io/component: customer
    app.kubernetes.io/instance: customer
    app.kubernetes.io/name: java
    app.kubernetes.io/part-of: store
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-8-el7
  name: customer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: customer
    deploymentconfig: customer
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: customer
        deploymentconfig: customer
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - image: ' '
          imagePullPolicy: Always
          name: customer
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - customer
        from:
          kind: ImageStreamTag
          name: customer:latest
      type: ImageChange
    - type: ConfigChange
